language: c

sudo: false

env: PYTHONDONTWRITEBYTECODE=x

os:
    - linux

branches:
  only:
    - "master"

cache:
    apt: true
    directories:
        - $HOME/.runtimes
        - $HOME/.venv
        - $HOME/.cache/pip
        - $HOME/wheelhouse
        - $HOME/.stack
        - $HOME/.local

env:
    global:
        - BUILD_RUNTIMES=$HOME/.runtimes
        - FORMAT_ALL=true

jobs:
    include:
        # Core tests that we want to run first.
        - env: TASK=check-pyup-yml
        - env: TASK=check-release-file
        - env: TASK=check-shellcheck
        - env: TASK=documentation
        - env: TASK=lint
        - env: TASK=check-rst
        - env: TASK=check-format
        - env: TASK=check-benchmark
        - env: TASK=check-coverage
        - env: TASK=check-requirements
        - env: TASK=check-pypy
        - env: TASK=check-py27
        - env: TASK=check-py36
        - env: TASK=check-quality

        # Less important tests that will probably
        # pass whenever the above do but are still
        # worth testing.
        - env: TASK=check-unicode
        - env: TASK=check-ancient-pip
        - env: TASK=check-pure-tracer
        - env: TASK=check-py273
        - env: TASK=check-py27-typing
        - env: TASK=check-py34
        - env: TASK=check-py35
        - env: TASK=check-nose
        - env: TASK=check-pytest28
        - env: TASK=check-faker070
        - env: TASK=check-faker071
        - env: TASK=check-django18
        - env: TASK=check-django110
        - env: TASK=check-django111
        - env: TASK=check-pandas18
        - env: TASK=check-pandas19
        - env: TASK=check-pandas20

        - env: TASK=deploy
          stage: deploy

stages:
    - test
    - name: deploy
      if: type = push

script:
    - make $TASK

matrix:
    fast_finish: true

notifications:
  email:
    recipients:
      - david@drmaciver.com
    on_success: never
    on_failure: change

addons:
  apt:
    packages:
      - libgmp-dev
